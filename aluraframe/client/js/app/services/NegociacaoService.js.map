{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","_http","HttpService","get","then","console","log","negociacoes","map","Negociacao","Date","objeto","data","quantidade","valor","catch","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","negociacao","ConnectionFactory","getConnection","NegociacaoDao","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from './HttpService';\nimport { ConnectionFactory } from './ConnectionFactory';\nimport { NegociacaoDao } from '../dao/NegociacaoDao';\nimport { Negociacao } from '../models/Negociacao';\n\nexport class NegociacaoService {\n\n  constructor() {\n\n    this._http = new HttpService();\n  }\n\n  obterNegociacoesDaSemana() {\n\n    return this._http\n      .get('negociacoes/semana')\n      .then(negociacoes => {\n        console.log(negociacoes);\n        return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n      })\n      .catch(erro => {\n        console.log(erro);\n        throw new Error('Não foi possível obter as negociações da semana');\n      });\n  }\n\n  obterNegociacoesDaSemanaAnterior() {\n\n    return this._http\n      .get('negociacoes/anterior')\n      .then(negociacoes => {\n        console.log(negociacoes);\n        return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n      })\n      .catch(erro => {\n        console.log(erro);\n        throw new Error('Não foi possível obter as negociações da semana anterior');\n      });\n  }\n\n  obterNegociacoesDaSemanaRetrasada() {\n\n    return this._http\n      .get('negociacoes/retrasada')\n      .then(negociacoes => {\n        console.log(negociacoes);\n        return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n      })\n      .catch(erro => {\n        console.log(erro);\n        throw new Error('Não foi possível obter as negociações da semana retrasada');\n      });\n\n  }\n\n  obterNegociacoes() {\n\n    return Promise.all([\n      this.obterNegociacoesDaSemana(),\n      this.obterNegociacoesDaSemanaAnterior(),\n      this.obterNegociacoesDaSemanaRetrasada()\n    ]).then(periodos => {\n\n      let negociacoes = periodos\n        .reduce((dados, periodo) => dados.concat(periodo), [])\n        .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor));\n\n      return negociacoes;\n    }).catch(erro => {\n      throw new Error(erro);\n    });\n  }\n\n  cadastra(negociacao) {\n\n    return ConnectionFactory\n      .getConnection()\n      .then(connection => new NegociacaoDao(connection))\n      .then(dao => dao.adiciona(negociacao))\n      .then(() => 'Negociação adicionada com sucesso')\n      .catch(erro => {\n        console.log(erro);\n        throw new Error('Não foi possível adicionar a negociação')\n      });\n  }\n\n  lista() {\n\n    return ConnectionFactory\n      .getConnection()\n      .then(connection => new NegociacaoDao(connection))\n      .then(dao => dao.listaTodos())\n      .catch(erro => {\n        console.log(erro);\n        throw new Error('Não foi possível obter as negociações')\n      })\n  }\n\n  apaga() {\n\n    return ConnectionFactory\n      .getConnection()\n      .then(connection => new NegociacaoDao(connection))\n      .then(dao => dao.apagaTodos())\n      .then(() => 'Negociações apagadas com sucesso')\n      .catch(erro => {\n        console.log(erro);\n        throw new Error('Não foi possível apagar as negociações')\n      })\n\n  }\n\n  importa(listaAtual) {\n\n    return this.obterNegociacoes()\n      .then(negociacoes =>\n        negociacoes.filter(negociacao =>\n          !listaAtual.some(negociacaoExistente =>\n            JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)))\n      )\n      .catch(erro => {\n        console.log(erro);\n        throw new Error('Não foi possível buscar negociações para importar');\n      })\n  }\n}\n"]}