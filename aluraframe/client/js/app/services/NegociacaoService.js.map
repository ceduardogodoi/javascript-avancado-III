{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","get","then","console","log","negociacoes","map","Date","objeto","data","quantidade","valor","catch","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from './HttpService';\nimport { ConnectionFactory } from './ConnectionFactory';\nimport { NegociacaoDao } from '../dao/NegociacaoDao';\nimport { Negociacao } from '../models/Negociacao';\n\nexport class NegociacaoService {\n\n  constructor() {\n\n    this._http = new HttpService();\n  }\n\n  obterNegociacoesDaSemana() {\n\n    return this._http\n      .get('negociacoes/semana')\n      .then(negociacoes => {\n        console.log(negociacoes);\n        return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n      })\n      .catch(erro => {\n        console.log(erro);\n        throw new Error('Não foi possível obter as negociações da semana');\n      });\n  }\n\n  obterNegociacoesDaSemanaAnterior() {\n\n    return this._http\n      .get('negociacoes/anterior')\n      .then(negociacoes => {\n        console.log(negociacoes);\n        return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n      })\n      .catch(erro => {\n        console.log(erro);\n        throw new Error('Não foi possível obter as negociações da semana anterior');\n      });\n  }\n\n  obterNegociacoesDaSemanaRetrasada() {\n\n    return this._http\n      .get('negociacoes/retrasada')\n      .then(negociacoes => {\n        console.log(negociacoes);\n        return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n      })\n      .catch(erro => {\n        console.log(erro);\n        throw new Error('Não foi possível obter as negociações da semana retrasada');\n      });\n\n  }\n\n  obterNegociacoes() {\n\n    return Promise.all([\n      this.obterNegociacoesDaSemana(),\n      this.obterNegociacoesDaSemanaAnterior(),\n      this.obterNegociacoesDaSemanaRetrasada()\n    ]).then(periodos => {\n\n      let negociacoes = periodos\n        .reduce((dados, periodo) => dados.concat(periodo), [])\n        .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor));\n\n      return negociacoes;\n    }).catch(erro => {\n      throw new Error(erro);\n    });\n  }\n\n  cadastra(negociacao) {\n\n    return ConnectionFactory\n      .getConnection()\n      .then(connection => new NegociacaoDao(connection))\n      .then(dao => dao.adiciona(negociacao))\n      .then(() => 'Negociação adicionada com sucesso')\n      .catch(erro => {\n        console.log(erro);\n        throw new Error('Não foi possível adicionar a negociação')\n      });\n  }\n\n  lista() {\n\n    return ConnectionFactory\n      .getConnection()\n      .then(connection => new NegociacaoDao(connection))\n      .then(dao => dao.listaTodos())\n      .catch(erro => {\n        console.log(erro);\n        throw new Error('Não foi possível obter as negociações')\n      })\n  }\n\n  apaga() {\n\n    return ConnectionFactory\n      .getConnection()\n      .then(connection => new NegociacaoDao(connection))\n      .then(dao => dao.apagaTodos())\n      .then(() => 'Negociações apagadas com sucesso')\n      .catch(erro => {\n        console.log(erro);\n        throw new Error('Não foi possível apagar as negociações')\n      })\n\n  }\n\n  importa(listaAtual) {\n\n    return this.obterNegociacoes()\n      .then(negociacoes =>\n        negociacoes.filter(negociacao =>\n          !listaAtual.some(negociacaoExistente =>\n            JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)))\n      )\n      .catch(erro => {\n        console.log(erro);\n        throw new Error('Não foi possível buscar negociações para importar');\n      })\n  }\n}\n"]}