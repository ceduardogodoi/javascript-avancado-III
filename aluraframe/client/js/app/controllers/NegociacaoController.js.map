{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["ListaNegociacoes","Mensagem","NegociacoesView","MensagemView","NegociacaoService","DateHelper","Bind","Negociacao","NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","_mensagem","_ordemAtual","_service","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","erro","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","importa","apaga","esvazia","_mensage","textoParaData","value","parseInt","parseFloat","focus","coluna","inverteOrdem","ordena","p","s"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { ListaNegociacoes } from '../models/ListaNegociacoes';\nimport { Mensagem } from '../models/Mensagem';\nimport { NegociacoesView } from '../views/NegociacoesView';\nimport { MensagemView } from '../views/MensagemView';\nimport { NegociacaoService } from '../services/NegociacaoService';\nimport { DateHelper } from '../helpers/DateHelper';\nimport { Bind } from '../helpers/Bind';\nimport { Negociacao } from '../models/Negociacao';\n\nexport class NegociacaoController {\n\n  constructor() {\n\n    let $ = document.querySelector.bind(document);\n\n    this._inputData = $('#data');\n    this._inputQuantidade = $('#quantidade');\n    this._inputValor = $('#valor');\n\n    this._listaNegociacoes = new Bind(\n      new ListaNegociacoes(),\n      new NegociacoesView($('#negociacoesView')),\n      'adiciona', 'esvazia', 'ordena', 'inverteOrdem');\n\n    this._mensagem = new Bind(\n      new Mensagem(), new MensagemView($('#mensagemView')),\n      'texto');\n\n    this._ordemAtual = '';\n\n    this._service = new NegociacaoService();\n\n    this._init();\n\n  }\n\n  _init() {\n\n    this._service\n      .lista()\n      .then(negociacoes =>\n        negociacoes.forEach(negociacao =>\n          this._listaNegociacoes.adiciona(negociacao)))\n      .catch(erro => this._mensagem.texto = erro);\n\n    setInterval(() => {\n      this.importaNegociacoes();\n    }, 3000);\n\n  }\n\n  adiciona(event) {\n\n    event.preventDefault();\n\n    let negociacao = this._criaNegociacao();\n\n    this._service\n      .cadastra(negociacao)\n      .then(mensagem => {\n        this._listaNegociacoes.adiciona(negociacao);\n        this._mensagem.texto = mensagem;\n        this._limpaFormulario();\n      })\n      .catch(erro => this._mensagem.texto = erro);\n  }\n\n  importaNegociacoes() {\n\n    this._service\n      .importa(this._listaNegociacoes.negociacoes)\n      .then(negociacoes => negociacoes.forEach(negociacao => {\n        this._listaNegociacoes.adiciona(negociacao);\n        this._mensagem.texto = 'Negociações do período importadas'\n      }))\n      .catch(erro => this._mensagem.texto = erro);\n  }\n\n  apaga() {\n\n    this._service\n      .apaga()\n      .then(mensagem => {\n        this._mensagem.texto = mensagem;\n        this._listaNegociacoes.esvazia();\n      })\n      .catch(erro => this._mensage.texto = erro);\n  }\n\n  _criaNegociacao() {\n\n    return new Negociacao(\n      DateHelper.textoParaData(this._inputData.value),\n      parseInt(this._inputQuantidade.value),\n      parseFloat(this._inputValor.value));\n  }\n\n  _limpaFormulario() {\n\n    this._inputData.value = '';\n    this._inputQuantidade.value = 1;\n    this._inputValor.value = 0.0;\n    this._inputData.focus();\n  }\n\n  ordena(coluna) {\n\n    if (this._ordemAtual == coluna) {\n      this._listaNegociacoes.inverteOrdem();\n    } else {\n      this._listaNegociacoes.ordena((p, s) => p[coluna] - s[coluna]);\n    }\n    this._ordemAtual = coluna;\n  }\n}\n"]}